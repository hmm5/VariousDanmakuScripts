#!/usr/bin/python3


#/home/owner/.pyenv/versions/3.9.9/bin/python3

import datetime
import asyncio
import danmaku
import sys
import time
import os
import re

async def printer(q):
	global f
	global start
	global dmc

	try:
		sleepcounter = 0 
		counter = 0
		last = start
		while True: 
			if (q.qsize()==0):
				if sleepcounter >= 400:
					print ("Nothing in Queue for a minute. Sleep Counter:", sleepcounter)
				await asyncio.sleep(.15)
				sleepcounter = sleepcounter + 1
				if sleepcounter == 600:
					print ("Nothing in Queue for more than 90 seconds.  Trying to restart dmc.")
					await dmc.stop()
					current = round(time.time()-start, 3)+1
					name = "Printer RESETTING"
					content = "DMC probably MESSED UP RESETTING!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
					color = "FFFFFF"
					L = ["{:.3f}".format(current), "\n", color, "\n", "[", name, "]", "\n", content,"\n", "\n"]			        
					f.writelines (L)
					f.flush()
					counter = 0	
					sleepcounter = 0				
					break
			else:
#				print ("Queue Size:", q.qsize(), "Timestamp:",time.time())
				m = await q.get()
				sleepcounter = 0
				if (m['content']!=('')):
					#Adding 2 second because of approx. delay with starting ykdl vs chatlog
					current = round(time.time()-start, 3)+2
					print ("Queue Size:", q.qsize(), "Timestamp:",str(datetime.timedelta(seconds=current)).rstrip('0'), "\033[0;36;40m", m['name'], "\033[1;37;40m", ": ", m['content'], "\033[0m")
					name = re.sub(r'\s+','',m['name'])
					content = re.sub(r'\s+','',m['content'])
					color = m['color']
					L = ["{:.3f}".format(current), "\n", color, "\n", "[", name, "]", "\n", content,"\n", "\n"]			        
					f.writelines (L)
#					counter = counter + 1
#					if q.qsize() == 0: 
#						f.flush()
#						counter = 0					
			if (time.time()-last > 3.5):
				last=time.time()
				f.flush()

				
	except KeyboardInterrupt: 
		print ("Chatlog Received Keyboard Interrupt QUITTING!")
		f.flush()
		f.close()
		await dmc.stop()
		sys.exit(0)
	except Exception as e:
		print ("EXCEPTION IN PRINTER!!!!!!!!!!!!!!!!!!!!!")		
		print ("Exception: ", e)
		current = round(time.time()-start, 3)+2
		name = "Printer RESETTING"
		content = "DMC probably MESSED UP RESETTING!!!!!!!"+str(e)
		color = "FFFFFF"
		L = ["{:.3f}".format(current), "\n", color, "\n", "[", name, "]", "\n", content,"\n", "\n"]			        
		f.writelines (L)
		f.flush()
		await dmc.stop()
	f.flush()

async def closesession():
	await dmc.stop()

async def main():
	while True:
		try:
			q = asyncio.Queue()
			global dmc
			dmc = danmaku.DanmakuClient(URL, q)
			print (URL)
			print_task=asyncio.create_task(printer(q))
			await dmc.start()		    
			print ("Restarting!!")
		except KeyboardInterrupt: 
			print ("Chatlog Received Keyboard Interrupt QUITTING!")
			await dmc.stop()
			f.flush()
			f.close()
			sys.exit(0)
			break
		except Exception as e:
			print ("FINALLY def_main restarting")
			print ("Exception: ", e)
			time.sleep(3)
			current = round(time.time()-start, 3)+2
			name = "Def_main RESETTING"
			content = "MESSED UP RESETTING!!!!!"+str(e)
			color = "FFFFFF"
			L = ["{:.3f}".format(current), "\n", color, "\n", "[", name, "]", "\n", content,"\n", "\n"]			        
			f.writelines (L)
			f.flush()
			await dmc.stop()
			print_task.cancel()


#RUNNING MAIN HERE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

global dmc
global f
global start

URL = sys.argv[1]
print (URL)
OutputFilename = "chatlog"
if (len(sys.argv)>2):
	OutputFilename = sys.argv[2]

print ("chatlogbeta: ", OutputFilename)
start = time.time()

while True:
	try: 
		print ("Starting CHATLOG")
		f = open(OutputFilename, 'w+', encoding='utf-8', buffering=1024) 
		asyncio.run(main())
		asyncio.run(closesession())
		f.flush()
		f.close()
		print ("NORMAL QUIT: QUITING DANMU")
		sys.exit(0)
	except 	KeyboardInterrupt: 
		print ("Chatlog Received Keyboard Interrupt QUITTING!")
		asyncio.run(closesession())
		f.flush()
		f.close()
		sys.exit(0)
	except Exception as e:
		print ("FINALLY MAIN restarting")
		print ("Exception: ", e)
		current = round(time.time()-start, 3)+2
		name = "MAIN RESETTING"
		content = "MESSED UP RESETTING!!!!!!!!!"+str(e)
		color = "FFFFFF"
		L = ["{:.3f}".format(current), "\n", color, "\n", "[", name, "]", "\n", content,"\n", "\n"]			        
		f.writelines (L)
		asyncio.run(closesession())
		f.flush()
		f.close()
