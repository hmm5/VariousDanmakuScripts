#!/usr/bin/env python3

import sys
import os 
import time
import re
from datetime import datetime
import subprocess
import signal


def ClosingDown(exitcode, Filename):
#	time.sleep(1) #delay just in case not finished writing to file.
	if (Filename!=""):	
		print ("CLOSING DOWN")
		subprocess.call(['notify-send', Filename, ' is closing.'])
	if (os.path.isfile(Filename+".log")) and (os.stat(Filename+".log").st_size == 0):
		print ("removing " + Filename+".log" + " because size = 0B")
		os.remove(Filename+".log")
	sys.exit(exitcode)


def CheckIfStreamOpen (URL):
	CheckIfStreaming = subprocess.Popen(["ykdl", "-i", URL],  stdout=subprocess.PIPE)
	Site=CheckIfStreaming.stdout.readline()
	Title=CheckIfStreaming.stdout.readline()
	Artist=CheckIfStreaming.stdout.readline()

	
#	Site=Site.decode('utf8')

	Title=Title.decode('utf8')
	Title=Title.replace("title:               ","")
	Title=Title.rstrip()
#	print ("YKDLchatbeta: ", "'", Title, "'")
#	Title = re.sub(r'\s+','',Title) 

#	Artist=Artist.decode('utf8')
#	Artist=Artist.replace("artist:              ","")
#	Artist = re.sub(r'\s+','',Artist)
	CheckIfStreaming.wait()

	ReturnCode=CheckIfStreaming.returncode

	return Title, ReturnCode

#INIT ARGUMENTS
Arguments = sys.argv
OutputName=""
URL=""
Title=""
ReturnCode=0  #Default to streamer is streaming.
ErrorCount=0
OutputFileFoundMatch=False
MPVStreaming=False

#####MAIN CODE STARTS HERE
#PARSING ARGUMENTS
for x in Arguments:
	if re.match("-O",x):
		OutputFileFoundMatch=True
		OutputName=x.replace("-O=", "")
	elif re.match("-p",x):
		MPVStreaming=True
	elif re.match("http",x):
		URL=x


Title, ReturnCode = CheckIfStreamOpen (URL)
if (ReturnCode!=0):
	ClosingDown (ReturnCode, "")

if (ReturnCode==0): 
	#GETTING DATE TO TAG FILENAME
	now = datetime.now()
	dt_string = now.strftime("%Y-%m-%dT%H:%M:%S")

	if (OutputName == ""):
		OutputFilename = Title+dt_string
	else:
		OutputFilename = OutputName + "_" + dt_string


if (ReturnCode==0):
	try:
		for index, x in enumerate(Arguments):
			if re.match("-O",x):
				Arguments[index]="-O="+OutputFilename
		if not OutputFileFoundMatch and not MPVStreaming:
			Arguments.insert(1,"-O="+OutputFilename)		
		Arguments.pop(0)
		if (URL!=""):
			if MPVStreaming==False:
				curpath = os.path.abspath(os.curdir)
				CompleteFilename=os.path.join(curpath, OutputFilename+".log")   
			else:
				OutputFilename=Title
				CompleteFilename=os.path.join("/tmp/", OutputFilename+".log")   
			chatlogbeta=subprocess.Popen(["chatlogbeta", URL, CompleteFilename])

		try:
			subprocess.call(['notify-send', OutputFilename, ' has started.'])
			ykdl=subprocess.Popen(["ykdl"]+Arguments, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.STDOUT,universal_newlines=True)
			for line in ykdl.stdout:
				line=str(line.rstrip())
				if ("Non-monotonous" in line) and ("huya" in URL):
					print ("Found ERROR!!!!!!!, ERROR COUNT: ", ErrorCount)
					ErrorCount = ErrorCount + 1
				if ErrorCount == 150:
					print ("ERROR COUNT TOO GREAT >150")
					subprocess.call(['notify-send','ERROR COUNT TOO GREAT >150 ','CHECK ', OutputFilename])
					ykdl.stdin.write('q')
					time.sleep(1)
					ykdl.send_signal(signal.SIGINT)
					print (ykdl.communicate())
					break
				print(line, end = "\r")
		except KeyboardInterrupt:
			try:
				print ("SENDING YKDL FFMPEG INTERUPT")
				ykdl.stdin.write('q')
				time.sleep(1)
				ykdl.send_signal(signal.SIGINT)
				print (ykdl.communicate())
				chatlogbeta.send_signal(signal.SIGINT)
				ClosingDown (chatlogbeta.returncode, OutputFilename)
			except Exception as e:
				print ("Exception: ", e)
				chatlogbeta.send_signal(signal.SIGINT)
				ykdl.stdin.write('q')
				ykdl.send_signal(signal.SIGINT)
				ClosingDown (chatlogbeta.returncode, OutputFilename)

#		ykdl=subprocess.call(["ykdl"]+Arguments)
		#STARTING PROCESSES (YKDL IS OPEN IN THE FOREGROUND SO IT CAN BE CONTROLLED AND DETERMINE WHAT HAPPENS TO THE CHATLOG)

	except KeyboardInterrupt: 
		print ("Keyboard Interrupt ENDING: Sending interupt to chatlog")
		chatlogbeta.send_signal(signal.SIGINT)
		ykdl.stdin.write('q')
#		ykdl.send_signal(signal.SIGINT)
		ClosingDown (chatlogbeta.returncode, OutputFilename)
	except Exception as e:
		print ("!!!!!!!!!!!!!!!!!!!!!!1YKDLCHATBETA ERROR!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
		print ("Exception: ", e)
		print ("Exception: ", e)
	print ("NORMAL QUIT: Sending interupt to chatlog")
	chatlogbeta.send_signal(signal.SIGINT)
	ClosingDown (ykdl.returncode, OutputFilename)


